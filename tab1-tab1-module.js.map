{"version":3,"sources":["webpack:///./src/app/tab1/tab1.module.ts","webpack:///./src/app/tab1/tab1.page.html","webpack:///./src/app/tab1/tab1.page.scss","webpack:///./src/app/tab1/tab1.page.ts"],"names":[],"mappings":"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","file":"tab1-tab1-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      <img src=\\\"https://explorer.crypto.ba/insight/img/DASHlogo_white.png\\\"  width=\\\"75\\\" height=\\\"35\\\" alt=\\\"\\\">\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card >\\n      <ion-card-header>\\n      <ion-card-title>\\n     Wallet details\\n      </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content >\\n       <ion-item>\\n         <ion-label text-wrap>  <h4> Wallet address  </h4>\\n         <p> {{walletaddress}}  </p> </ion-label>\\n       </ion-item>\\n\\n       <ion-item>\\n         <ion-label > <h4> Wallet balance  </h4>\\n         <p *ngIf=\\\"walletbalance\\\"> {{walletbalance.balanceSat / 100000000 }} RXC</p> </ion-label>\\n       </ion-item>\\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"gettestnetbalance()\\\"> Reload balance </ion-button>\\n      </ion-card-content >\\n    </ion-card >\\n\\n    <ion-card >\\n      <ion-card-header>\\n      <ion-card-title>\\n     Send RXC \\n      </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content >\\n       <ion-item>\\n         <ion-label position=\\\"stacked\\\"> Address to send </ion-label>\\n         <ion-textarea  rows=\\\"2\\\" text-wrap [(ngModel)]=\\\"toaddress\\\" placeholder=\\\"Address to send \\\"></ion-textarea>\\n       </ion-item>\\n\\n       <ion-item>\\n         <ion-label position=\\\"stacked\\\"> Amount to send </ion-label>\\n         <ion-input  [(ngModel)]=\\\"toamount\\\" placeholder=\\\"Amount to send \\\"></ion-input>\\n       </ion-item>\\n\\n      <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"sendpayment()\\\"> Direct send </ion-button>\\n      </ion-card-content >\\n    </ion-card >\\n\\n\\n    <ion-card class=\\\"datainput\\\">\\n      <ion-card-header>\\n      <ion-card-title>\\n     Transaction Status\\n      </ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-item >\\n     Transaction output:  {{txid}}\\n      </ion-item>\\n    </ion-card>\\n\\n\\n\\n</ion-content>\\n\"","module.exports = \".welcome-card ion-img {\\n  max-height: 35vh;\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RvbmkvRG93bmxvYWRzL3dvcmtpbmdkYXNod2FsbGV0LW1hc3Rlci9zcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MiLCJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLGdCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndlbGNvbWUtY2FyZCBpb24taW1nIHtcbiAgbWF4LWhlaWdodDogMzV2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiIsIi53ZWxjb21lLWNhcmQgaW9uLWltZyB7XG4gIG1heC1oZWlnaHQ6IDM1dmg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { PuppipayDashService } from '../providers/puppipay.dash.service';\n\n\ndeclare var dashcore;\n\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\n\nexport class Tab1Page implements OnInit{\n\npublic walletbalance: any;\npublic walletaddress: any;\npublic walletwif: any;\npublic toaddress: string;\npublic toamount: number;\npublic txid: string;\n\nconstructor( private storage: Storage,\n         private puppipayservice: PuppipayDashService ) {\n\n}\n\n\nngOnInit() {\n\n  this.loadwalletwif() ;\n}\n\nionViewWillEnter() {\n  this.loadwalletwif() ;\n}\n\nwiftoaddress() {\n\n  this.walletaddress = dashcore.PrivateKey.fromWIF(this.walletwif ).toAddress(dashcore.Networks.testnet).toString();\n\n}\n\n\nsendpayment() {\n\n this.puppipayservice.getUtxo(this.walletaddress, 'livenet').then((data: any) => {\n var fees = 0.0001;\n\n var utxo = data;\n var privatekey = dashcore.PrivateKey.fromWIF(this.walletwif);\n var changeaddress = this.walletaddress;\n\n    var tx = this.puppipayservice.createtransaction(utxo, privatekey,changeaddress, this.toaddress, Number(this.toamount),fees ) ;\n    console.log(\"tx log:\",tx.toString('hex'));\n\n    this.puppipayservice.broadcast(tx.toString('hex')).then((res: any) => {\n      if(res) {\n        this.txid = res.txid;\n        var trandata = {\n\t    txid: this.txid,\n\t    fromaddress: this.walletaddress,\n\t    toaddress: this.toaddress,\n\t    amount: Number(this.toamount),\n\t    fees: fees\n        };\n\n       this.puppipayservice.savetransaction(trandata);\n\n      }\n    });\n\n  });\n}\n\n\nloadwalletwif() {\n     this.storage.get('walletwif').then(data=> {\n        if(data) {\n          this.storage.get('walletaddress').then(data1=> {\n            if(data1) {\n              this.walletaddress = data1;\n            }\n          });\n      this.walletwif = data;\n      this.gettestnetbalance() ;\n        }\n     });\n\n}\ngettestnetbalance();\n\ngettestnetbalance() {\n\nif(!this.walletaddress) {\n return;\n}\n\n this.puppipayservice.getBalance(this.walletaddress, \"livenet\").then((data: any) => {\n      if(data != null)\n      {\n        this.walletbalance = data;\n      }\n      else {\n        alert(\"Query failed\");\n      }\n   }, (err)=> {\n     alert (err)\n   });\n}\n\n\n\n\n\n\n\n}\n"],"sourceRoot":""}